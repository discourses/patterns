name: Patterns

on: [push]

jobs:
  build:
    name: Inspecting
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 8
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          printf "\n"
          echo "============================= flake8 session starts =============================="
          
          # Stop the build if there are Python syntax errors or undefined names
          printf "\n"          
          echo "Issues in relation to logic (F7), syntax (Python E9, Flake F7), mathematical
          formulae symbols (F63), undefined variable names (F82):"          
          echo "src/functions"
          flake8 --count --select E9,F63,F7,F82 --show-source --statistics src/functions
          echo "src/images"
          flake8 --count --select E9,F63,F7,F82 --show-source --statistics src/images
          echo "src/modelling"
          flake8 --count --select E9,F63,F7,F82 --show-source --statistics src/modelling
          echo "src/register"
          flake8 --count --select E9,F63,F7,F82 --show-source --statistics src/register
          
          # Herein, --exit-zero treats all errors as warnings. Note, the GitHub editor is 127 characters wide
          printf "\n"
          echo "Complexity issues:"
          echo "src/functions"
          flake8 --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics src/functions
          echo "src/images"
          flake8 --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics src/images
          echo "src/modelling"
          flake8 --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics src/modelling
          echo "src/register"
          flake8 --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics src/register

      - name: Lint with pylint
        run: |
          pip install pylint
          printf "\n"
          echo "============================= pylint session starts =============================="
          
          # pylint
          printf "\n"
          echo "src/functions"
          pylint --rcfile .pylintrc src/functions
          echo "src/images"
          pylint --rcfile .pylintrc src/images
          echo "src/modelling"
          pylint --rcfile .pylintrc src/modelling
          echo "src/register"
          pylint --rcfile .pylintrc src/register

      - name: Test with pytest
        run: |
          pip install pytest
          printf "\n"
          echo "============================= pytest session starts =============================="
          printf "\npytest -o python_files=test_*.py"

      - name: Coverage with pytest-cov
        run: |
          pip install coverage
          pip install pytest-cov
          printf "\n"
          echo "============================= coverage session starts =============================="
          printf "\nUpcoming: pytest --cov src/functions tests/functions\netc."